## lambda 함수

파이썬의 익명 함수, 간단한 연산을 수행하는 일회용 함수를 만들 때 주로 사용

기본구조:

lambda arguments: expression

특징:

- 한 줄로 표현되는 함수
- 여러 개의 인자값을 가질 수 있지만, 표현식은 하나만 가능
- 별도의 return문 없이 결과 자동 반환

# 일반 함수
def add(x, y):
    return x + y

# 같은 기능의 lambda 함수
add = lambda x, y: x + y

print(add(3, 4))  # 출력: 7

리스트 정렬에 사용해보기

fruits = ['apple', 'banana', 'cherry']
sorted_fruits = sorted(fruits, key=lambda x: len(x))
print(sorted_fruits)  # 출력: ['apple', 'cherry', 'banana']

map함수와 함께 사용해보기
numbers = [1, 2, 3, 4, 5]
squared = list(map(lambda x: x**2, numbers))
print(squared)  # 출력: [1, 4, 9, 16, 25]


언제 Lambda 함수를 사용해야 할까?

간단한 연산을 수행하는 함수가 필요할 때
함수를 한 번만 사용하고 재사용할 필요가 없을 때
sorted(), map(), filter() 등의 함수에 사용자 정의 함수를 전달해야 할 때



